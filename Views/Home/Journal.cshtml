@using Microsoft.AspNetCore.Identity


@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Journal";
    var u = await @UserManager.GetUserAsync(User);
    var userName = u.UserName;
    if (u.FirstName != null)
    {
        userName = u.FirstName;
    }

}
<div id="app">
    <section v-if="errored">
        <p>We're sorry, we're not able to retrieve this information at the moment, please try back later</p>
    </section>

    <section v-else>
        <div v-if="loading"><vue-typer text='Loading'></vue-typer></div>

        <div v-else>
            <div class="top-buttons">
                <div class="coach-dropdown"><dropdown v-on:changecoach="changecoach($event)" v-bind:selectedcoach="selectedcoach" v-bind:coachlist="coachlist"></dropdown></div>
            </div>
            <div class="content">
                <template v-for="item in items">
                    <gc-item v-bind:content="item.content" v-bind:author="item.author" :class="item.compstyle"></gc-item>
                </template>

            </div>
            <div v-if="!longresponse && !numresponse">
                <div class="response">
                    <gc-response v-on:eventname="updateparent($event)" author="@userName" v-bind:index="index" v-bind:coach="selectedcoach"></gc-response>
                </div>
            </div>
            <div v-if="longresponse">
                <div class="response-long">
                    <gc-response-long v-on:eventname="updateparent($event)" author="@userName" v-bind:index="index" v-bind:coach="selectedcoach"></gc-response-long>
                </div>
            </div>
            <div v-if="numresponse">
                <div class="response-num">
                    <gc-response-num v-on:eventname="updateparent($event)" author="@userName" v-bind:index="index" v-bind:coach="selectedcoach"></gc-response-num>
                </div>
            </div>
            <div class="submit">
                <button v-on:click="postConversation()">Finish</button>
            </div>
        </div>

    </section>
</div>

<script id="dropdown" type="x/template">
    <div >
        <div class="enclose-head">
            <a href="#" v-on:click.prevent="showDropDown=!showDropDown">
                <div class="dropdown-head">Talking to <br><b>Coach {{ selectedcoach }}</b></div>
                <i :class="{ 'fa-caret-up': showDropDown, 'fa-caret-down': !showDropDown }" class="fa" aria-hidden="true"></i>
            </a>
            <br style="clear:both;" />
        </div>
        <div class="abs-pos" v-if="showDropDown">
            <div class="switch-to">
                Switch to
            </div>
                <ul class="menu list">
                    <li v-for="link in coachlist" class="list">
                        <a href="#" v-on:click="changecoach(link.name)" class="dropdown-item">{{ link.name }}</a>
                    </li>
                </ul>
        </div>
        
    </div>
</script>


@section Scripts {
    <script src="~/js/coach.js"></script>
    
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">
}